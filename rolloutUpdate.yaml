apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: argocd-gateway
spec:
  # The selector matches the ingress gateway pod labels.
  # If you installed Istio using Helm following the standard documentation, this would be "istio=ingress"
  selector:
    istio: ingressgateway # use istio default controller
    # app: argocd # use istio default controller
    # app.kubernetes.io/instance: argocd
  servers:
  - port:
      number: 8080
      name: http
      protocol: HTTP
    hosts:
    - "argocdtest.com"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: argocd-svc
spec:
  hosts:
  - "argocdtest.com"
  gateways:
  - argocd-gateway
  http:
  - route:
    - destination:
        host: argocd
        port:
          number: 3000
      weight: 100
    - destination:
        host: argocd-canary
        port:
          number: 3000
      weight: 0
# ---
# apiVersion: argoproj.io/v1alpha1
# kind: Rollout
# metadata:
#   name: argocd
# spec:
#   strategy:
#     canary:
#       # Reference to a Service which the controller updates to point to the canary ReplicaSet
#       canaryService: argocd-canary
#       # Reference to a Service which the controller updates to point to the stable ReplicaSet
#       stableService: argocd
#       trafficRouting:
#         istio:
#           virtualServices:
#           # One or more virtualServices can be configured
#           # Reference to a VirtualService which the controller updates with canary weights
#           - name: argocd-svc
#             # Optional if there is a single HTTP route in the VirtualService, otherwise required
#             # routes:
#             # - http-primary

---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: argocd
spec:
  replicas: 5
  strategy:
    canary:
      canaryService: argocd-canary
      stableService: argocd
      trafficRouting:
        istio:
          virtualServices:
          - name: argocd-svc # At least one virtualService is required
            # routes:
            # - primary # At least one route is required
          # - name: rollouts-demo-vsvc2
          #   routes:
          #   - secondary # At least one route is required
      steps:
      - setWeight: 10
      - pause: {}
      - setWeight: 20
      - pause: {}
      - setWeight: 50
      - pause: {}
      - setWeight: 100
      - pause: {}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd
      app.kubernetes.io/instance: argocd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd
        app.kubernetes.io/instance: argocd
    spec:
      containers:
      - name: argocd
        image: macabrabits/argocd-test:blue
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            memory: 32Mi
            cpu: 5m

# k argo rollouts get rollout argocd --watch
# kubectl argo rollouts set image argocd argocd=macabrabits/argocd-test:green
# kubectl argo rollouts promote argocd

# k get pods -o jsonpath='{.items[0].spec.containers[0].image}'
# k get pods -o jsonpath='{.items[*].spec.containers[0].image}'
